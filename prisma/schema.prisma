generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Group {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  tags         String?      @db.VarChar(255)
  description  String?      @db.VarChar(500)
  startDate    DateTime     @map("start_date") @db.Timestamptz(6)
  endDate      DateTime     @map("end_date") @db.Timestamptz(6)
  room         Int?
  doNotDisturb Boolean      @map("do_not_disturb")
  createdAt    DateTime?    @map("created_at") @db.Timestamptz(6)
  ownerId      Int?         @map("owner_id")
  maxAttendees Int?         @default(100) @map("max_attendees")
  link         String?      @db.VarChar(255)
  place        String?      @db.VarChar(255)
  users        User?        @relation(fields: [ownerId], references: [id])
  usersGroups  Membership[]

  @@index([ownerId], name: "groups_ownerid_index")
  @@map("groups")
}

model Ticket {
  id          Int        @id @default(autoincrement())
  description String?    @db.VarChar(500)
  roomNumber  Int        @map("room_number")
  createdAt   DateTime?  @map("created_at") @db.Timestamptz(6)
  status      StatusType @default(Sent)
  userId      Int?       @map("user_id")
  users       User?      @relation(fields: [userId], references: [id])

  @@index([userId], name: "tickets_userid_index")
  @@map("tickets")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  email        String       @db.VarChar(255)
  authSchId    String       @map("auth_sch_id") @db.VarChar(255)
  floor        Int?
  role         RoleType     @default(User)
  wantEmail    Boolean?     @default(true) @map("want_email")
  groups       Group[]
  tickets      Ticket[]
  users_groups Membership[]

  @@map("users")
}

model Membership {
  id      Int    @id @default(autoincrement())
  userId  Int?   @map("user_id")
  groupId Int?   @map("group_id")
  group   Group? @relation(fields: [groupId], references: [id])
  user    User?  @relation(fields: [userId], references: [id])

  @@index([groupId], name: "users_groups_groupid_index")
  @@index([userId], name: "users_groups_userid_index")
  @@map("users_groups")
}

enum StatusType {
  Sent        @map("SENT")
  InProgress  @map("IN_PROGRESS")
  Done        @map("DONE")
  Archived    @map("ARCHIVED")

  @@map("status_type")
}

enum RoleType {
  Admin        @map("ADMIN")
  TicketAdmin  @map("TICKET_ADMIN")
  User         @map("USER")

  @@map("role_type")
}
